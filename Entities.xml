<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Entities build="b151" majorVersion="6" minorVersion="6" modelPersistenceProviderPackage="H2PersistenceProviderPackage" revision="2" schemaVersion="810">
	<StyleDefinitions/>
	<Networks/>
	<PersistenceProviderPackages/>
	<Mashups/>
	<ScriptFunctionLibraries/>
	<Users/>
	<DirectoryServices/>
	<Widgets/>
	<MediaEntities/>
	<Groups/>
	<PersistenceProviders/>
	<ModelTags/>
	<LocalizationTables/>
	<Dashboards/>
	<DataShapes>
		<DataShape baseDataShape="" description="" documentationContent="&lt;p&gt;This datashape maps a device response from sigfox. It should look something like this:&lt;/p&gt;&lt;pre&gt;{&#10;        &quot;id&quot; : &quot;0B59&quot;,&#10;        &quot;name&quot; : &quot;Test 0B59&quot;,&#10;        &quot;type&quot; : &quot;4d3091a05ee16b3cc86699ab&quot;,&#10;        &quot;last&quot; : 0,&#10;        &quot;averageSignal&quot;: 8.457,&#10;        &quot;averageSnr&quot;: 8.457,&#10;        &quot;averageRssi&quot;: -125.967,&#10;        &quot;state&quot;: 0,&#10;        &quot;activationTime&quot;: 1404096340556&#10;      }&lt;/pre&gt;&#10;" homeMashup="" lastModifiedDate="2016-01-28T11:10:06.518+02:00" name="Sigfox.DeviceInfoDatashape" tags="PTC:Sigfox">
			<Owner name="Administrator" type="User"/>
			<avatar/>
			<DesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</DesignTimePermissions>
			<RunTimePermissions/>
			<VisibilityPermissions>
				<Visibility/>
			</VisibilityPermissions>
			<ConfigurationTables/>
			<FieldDefinitions>
				<FieldDefinition baseType="LONG" description="" name="activationTime" ordinal="9"/>
				<FieldDefinition baseType="NUMBER" description="" name="averageRssi" ordinal="7"/>
				<FieldDefinition baseType="NUMBER" description="" name="averageSignal" ordinal="5"/>
				<FieldDefinition baseType="NUMBER" description="" name="averageSnr" ordinal="6"/>
				<FieldDefinition baseType="STRING" description="" name="contractId" ordinal="11"/>
				<FieldDefinition baseType="STRING" description="" name="id" ordinal="1"/>
				<FieldDefinition baseType="LONG" description="" name="last" ordinal="4"/>
				<FieldDefinition baseType="STRING" description="" name="name" ordinal="2"/>
				<FieldDefinition baseType="INTEGER" description="" name="state" ordinal="8"/>
				<FieldDefinition baseType="LONG" description="" name="tokenEnd" ordinal="12"/>
				<FieldDefinition baseType="STRING" description="" name="tokenType" ordinal="10"/>
				<FieldDefinition baseType="STRING" description="" name="type" ordinal="3"/>
			</FieldDefinitions>
			<ConfigurationChanges>
				<ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, tags : updated&#10;documentation : updated&#10;" timestamp="2016-01-18T12:36:24.764+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="header : tags : updated&#10;" timestamp="2016-01-18T13:58:24.484+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2016-01-28T11:10:06.518+02:00" user="Administrator"/>
			</ConfigurationChanges>
		</DataShape>
		<DataShape baseDataShape="" description="" documentationContent="&lt;p&gt;This datashape maps a device type response from sigfox. It should look something like this:&lt;/p&gt;&lt;pre&gt;{&#10;    &quot;id&quot; : &quot;4d3091a05ee16b3cc86699ab&quot;,&#10;    &quot;name&quot; : &quot;SIGFOX test device&quot;,&#10;    &quot;group&quot; : &quot;4d39a4c9e03e6b3c430e2188&quot;,&#10;    &quot;description&quot; : &quot;Little things in the black boxes&quot;,&#10;    &quot;keepAlive&quot; : 7200,&#10;    &quot;payloadType&quot; : &quot;None&quot;,&#10;    &quot;contract&quot; : &quot;523b1d10d777d3f5ae038a02&quot;&#10;  }&lt;/pre&gt;&#10;" homeMashup="" lastModifiedDate="2016-01-28T11:10:06.513+02:00" name="Sigfox.DeviceTypeDatashape" tags="PTC:Sigfox">
			<Owner name="Administrator" type="User"/>
			<avatar/>
			<DesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</DesignTimePermissions>
			<RunTimePermissions/>
			<VisibilityPermissions>
				<Visibility/>
			</VisibilityPermissions>
			<ConfigurationTables/>
			<FieldDefinitions>
				<FieldDefinition baseType="STRING" description="" name="alertEmail" ordinal="10"/>
				<FieldDefinition baseType="STRING" description="" name="contract" ordinal="7"/>
				<FieldDefinition baseType="STRING" description="" name="description" ordinal="4"/>
				<FieldDefinition baseType="STRING" description="" name="downlinkDataString" ordinal="9"/>
				<FieldDefinition baseType="INTEGER" description="" name="downlinkMode" ordinal="8"/>
				<FieldDefinition baseType="STRING" description="" name="group" ordinal="3"/>
				<FieldDefinition baseType="STRING" description="" name="id" ordinal="1"/>
				<FieldDefinition baseType="INTEGER" description="" name="keepAlive" ordinal="5"/>
				<FieldDefinition baseType="STRING" description="" name="name" ordinal="2"/>
				<FieldDefinition baseType="STRING" description="" name="payloadType" ordinal="6"/>
			</FieldDefinitions>
			<ConfigurationChanges>
				<ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, tags : updated&#10;" timestamp="2016-01-18T12:34:40.038+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="header : tags : updated&#10;" timestamp="2016-01-18T13:58:17.979+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2016-01-28T11:10:06.513+02:00" user="Administrator"/>
			</ConfigurationChanges>
		</DataShape>
		<DataShape baseDataShape="" description="" documentationContent="&lt;p&gt;This datashape maps a callback response from sigfox. It should look something like this:&lt;/p&gt;&lt;pre&gt;{&#10;        &quot;channel&quot; : &quot;URL&quot;,&#10;        &quot;callbackType&quot; : 0,&#10;        &quot;callbackSubtype&quot; : 2,&#10;        &quot;url&quot; : &quot;http://myserver.com/sigfox/callback&quot;,&#10;        &quot;usePost&quot; : true,&#10;        &quot;enabled&quot; : true,&#10;        &quot;sendDuplicate&quot; : false,&#10;        &quot;sendSni&quot;: false,&#10;        &quot;payloadConfig&quot; : &quot;var1::bool:1&quot;,&#10;        &quot;bodyTemplate&quot; : &quot;device : {device} / {var1}&quot;,&#10;        &quot;headers&quot; : {&#10;            &quot;time&quot; : &quot;{time}&quot;&#10;        },&#10;        &quot;contentType&quot; : &quot;text/plain&quot;&#10;    }&lt;/pre&gt;&#10;" homeMashup="" lastModifiedDate="2016-01-28T11:10:06.516+02:00" name="Sigfox.CallbackDatashape" tags="PTC:Sigfox">
			<Owner name="Administrator" type="User"/>
			<avatar/>
			<DesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</DesignTimePermissions>
			<RunTimePermissions/>
			<VisibilityPermissions>
				<Visibility/>
			</VisibilityPermissions>
			<ConfigurationTables/>
			<FieldDefinitions>
				<FieldDefinition baseType="STRING" description="" name="bodyTemplate" ordinal="11"/>
				<FieldDefinition baseType="INTEGER" description="" name="callbackSubtype" ordinal="5"/>
				<FieldDefinition baseType="INTEGER" description="" name="callbackType" ordinal="3"/>
				<FieldDefinition baseType="STRING" description="" name="channel" ordinal="4"/>
				<FieldDefinition baseType="BOOLEAN" description="" name="dead" ordinal="15"/>
				<FieldDefinition baseType="BOOLEAN" description="" name="downlinkHook" ordinal="16"/>
				<FieldDefinition baseType="BOOLEAN" description="" name="enabled" ordinal="7"/>
				<FieldDefinition baseType="STRING" description="" name="headers" ordinal="12"/>
				<FieldDefinition baseType="STRING" description="" name="httpMethod" ordinal="14"/>
				<FieldDefinition baseType="STRING" description="" name="id" ordinal="1"/>
				<FieldDefinition baseType="STRING" description="" name="linePattern" ordinal="13"/>
				<FieldDefinition baseType="STRING" description="" name="payloadConfig" ordinal="10"/>
				<FieldDefinition baseType="BOOLEAN" description="" name="sendDuplicate" ordinal="8"/>
				<FieldDefinition baseType="BOOLEAN" description="" name="sendSni" ordinal="9"/>
				<FieldDefinition baseType="STRING" description="" name="url" ordinal="2"/>
				<FieldDefinition baseType="BOOLEAN" description="" name="usePost" ordinal="7"/>
			</FieldDefinitions>
			<ConfigurationChanges>
				<ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, tags : updated&#10;documentation : updated&#10;" timestamp="2016-01-18T12:36:40.477+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="header : tags : updated&#10;" timestamp="2016-01-18T13:58:28.936+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2016-01-28T11:10:06.516+02:00" user="Administrator"/>
			</ConfigurationChanges>
		</DataShape>
	</DataShapes>
	<Things>
		<Thing description="This scheduler will fire each hour and see of there is any data in the last hour." documentationContent="&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#10;" effectiveThingPackage="SchedulerThing" enabled="true" homeMashup="" identifier="" lastModifiedDate="2016-01-28T11:10:06.532+02:00" name="Sigfox.DevicesConnectedScheduler" published="false" tags="PTC:Sigfox" thingTemplate="Scheduler" valueStream="">
			<Owner name="Administrator" type="User"/>
			<avatar/>
			<DesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</DesignTimePermissions>
			<RunTimePermissions/>
			<VisibilityPermissions>
				<Visibility/>
			</VisibilityPermissions>
			<ConfigurationTables>
				<ConfigurationTable description="General Settings" isMultiRow="false" name="Settings" ordinal="0">
					<DataShape>
						<FieldDefinitions>
							<FieldDefinition aspect.defaultValue="true" baseType="BOOLEAN" description="Automatically enable scheduler on startup" name="enabled" ordinal="0"/>
							<FieldDefinition baseType="USERNAME" description="User context in which to run event handlers" name="runAsUser" ordinal="0"/>
							<FieldDefinition aspect.defaultValue="0 0/1 * * * ?" baseType="SCHEDULE" description="Execution Schedule (Cron String)" name="schedule" ordinal="0"/>
						</FieldDefinitions>
					</DataShape>
					<Rows>
						<Row>
							<runAsUser>
								<![CDATA[Administrator]]>
							</runAsUser>
							<schedule>
								<![CDATA[0 0 0/1 * * ? *]]>
							</schedule>
							<enabled>true</enabled>
						</Row>
					</Rows>
				</ConfigurationTable>
			</ConfigurationTables>
			<ThingShape>
				<PropertyDefinitions/>
				<ServiceDefinitions/>
				<EventDefinitions/>
				<ServiceMappings/>
				<ServiceImplementations/>
				<Subscriptions/>
			</ThingShape>
			<PropertyBindings/>
			<RemotePropertyBindings/>
			<RemoteServiceBindings/>
			<RemoteEventBindings/>
			<AlertConfigurations/>
			<ImplementedShapes/>
			<ThingProperties/>
			<ConfigurationChanges>
				<ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2016-01-28T11:10:06.532+02:00" user="Administrator"/>
			</ConfigurationChanges>
		</Thing>
		<Thing description="This thing is listening for callbacks sent from Sigfox and dispaching them" documentationContent="&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#10;" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" lastModifiedDate="2016-01-28T11:10:06.533+02:00" name="Sigfox.CallbackInterface" published="false" tags="PTC:Sigfox" thingTemplate="GenericThing" valueStream="">
			<Owner name="Administrator" type="User"/>
			<avatar/>
			<DesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</DesignTimePermissions>
			<RunTimePermissions/>
			<VisibilityPermissions>
				<Visibility/>
			</VisibilityPermissions>
			<ConfigurationTables/>
			<ThingShape>
				<PropertyDefinitions/>
				<ServiceDefinitions>
					<ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="CallbackDataBatch">
						<ResultType baseType="NOTHING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="TEXT" description="" name="batch" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="" description="Gets the sigfox device instance for a specific sigfoxId" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getSigfoxDeviceFromSigfoxId">
						<ResultType baseType="STRING" description="The thing name of the device" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="sigfoxId" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="setDownlinkMessage">
						<ResultType baseType="NOTHING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="THINGNAME" description="" name="deviceName" ordinal="1"/>
							<FieldDefinition baseType="STRING" description="" name="message" ordinal="2"/>
						</ParameterDefinitions>
					</ServiceDefinition>
				</ServiceDefinitions>
				<EventDefinitions/>
				<ServiceMappings/>
				<ServiceImplementations>
					<ServiceImplementation description="" handlerName="Script" name="CallbackDataBatch">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var logPrefix = me.name +"::CallbackDataBatch: ";

var lines = batch.split("\n");
var numLines = lines.length;
logger.warn(logPrefix +"received " + numLines + " lines");

var i;
for (i = 0; i < numLines; i++) {
    logger.warn(logPrefix +"line " + i + ": " + lines[i]);
    
    // based on defined pattern fields are [{time};{device};{snr};{rssi};{avgSignal};{station};{data};{lat};{lng};{seqNumber};]
    
    var items = lines[i].split(";");
    var numItems = items.length;
    // try to find a thing that has this sigfox id
    var thingName = me.getSigfoxDeviceFromSigfoxId({sigfoxId: items[1]});
    if(thingName == "") {
        log.error(logPrefix + " Failed to find  thing provisioned for sigfoxId" + items[1]); 
        throw "Failed to find  thing provisioned for sigfoxId" + items[1];
    }
    // the time is a unix epoch 
    var receiveDate = new Date(parseInt(items[0]) * 1000);
    // set the generic sigfox properties
    Things[thingName].lastCommunicationDate = receiveDate;
    Things[thingName].averageRssi = items[3];
    Things[thingName].averageSignal = items[4];
    Things[thingName].lastStation = items[5];
    Things[thingName].lastRawMessage = items[6];
    var location = {latitude: items[7], longitude: items[8]};
    Things[thingName].sigfoxLocation = location;
    Things[thingName].Location = location;
    Things[thingName].lastSeqNumber = items[9];
    // we received new data, so increment the uplink message counter
	Things[thingName].numberUplinkMessages++;
    
    Things[thingName].UpdateData({data: items[6], receiveTimestamp: receiveDate});
}
]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="getSigfoxDeviceFromSigfoxId">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var query = {
  "filters": {
    "fieldName": "sigfoxId",
    "type": "EQ",
    "value": sigfoxId
  }
};

var params = {
	query: query
};

// result: INFOTABLE dataShape: RootEntityList
var things = ThingShapes["Sigfox.GenericSigfoxDeviceThingShape"].QueryImplementingThingsWithData(params);
if(things.getRowCount() > 0) {
  var result = things.rows[0].name;
} else {
	var result ="";
}]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="setDownlinkMessage">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[Things[deviceName].numberDownlinkMessages++;]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
				</ServiceImplementations>
				<Subscriptions/>
			</ThingShape>
			<PropertyBindings/>
			<RemotePropertyBindings/>
			<RemoteServiceBindings/>
			<RemoteEventBindings/>
			<AlertConfigurations/>
			<ImplementedShapes/>
			<ThingProperties/>
			<ConfigurationChanges>
				<ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2016-01-28T11:10:06.533+02:00" user="Administrator"/>
			</ConfigurationChanges>
		</Thing>
	</Things>
	<Logs/>
	<Authenticators/>
	<ThingPackages/>
	<ApplicationKeys/>
	<StateDefinitions/>
	<ThingTemplates>
		<ThingTemplate baseThingTemplate="GenericThing" description="This is the representation into thingworx of the REST interface Sigfox provides.&#10;Using the services on this interface the user is able to view, edit and delete the devices of a group in SIGFOX." documentationContent="&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#10;" effectiveThingPackage="ConfiguredThing" homeMashup="" lastModifiedDate="2016-01-28T11:10:06.529+02:00" name="Sigfox.RestInterface" tags="PTC:Sigfox" thingPackage="" valueStream="">
			<Owner name="Administrator" type="User"/>
			<avatar/>
			<DesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</DesignTimePermissions>
			<RunTimePermissions/>
			<VisibilityPermissions>
				<Visibility/>
			</VisibilityPermissions>
			<ConfigurationTables/>
			<PropertyBindings/>
			<RemotePropertyBindings/>
			<RemoteServiceBindings/>
			<RemoteEventBindings/>
			<AlertConfigurations>
				<AlertDefinitions name="password"/>
				<AlertDefinitions name="url"/>
				<AlertDefinitions name="username"/>
			</AlertConfigurations>
			<ThingShape>
				<PropertyDefinitions>
					<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="The password used to connect to the rest api" isLocalOnly="false" name="password" ordinal="2"/>
					<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="The url to the sigfox backend. This is provided as a property in order to easily switch from the backend-demo to the real sigfox backend." isLocalOnly="false" name="url" ordinal="3"/>
					<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="The userName used to login into SIGFOX. A group can have multiple api access credentials. This property is persistent so when the server is restarted the value is not lost" isLocalOnly="false" name="username" ordinal="1"/>
				</PropertyDefinitions>
				<ServiceDefinitions>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="Create a new device type&#10;Maps the endpoint:&#10;POST https://backend.sigfox.com/api/devicetypes/create" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="createDeviceType">
						<ResultType baseType="STRING" description=" Identifier of the created device type" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition aspect.dataShape="Sigfox.DeviceTypeDatashape" aspect.isRequired="true" baseType="INFOTABLE" description="The device type information coming as a infotable" name="deviceTypeInfo" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="Create a device type callback&#10;&#10;Maps the endpoint:&#10;POST https://backend.sigfox.com/api/devicetypes/{devicetype-id}/callbacks/new" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="createDeviceTypeCallback">
						<ResultType baseType="STRING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition aspect.dataShape="Sigfox.CallbackDatashape" baseType="INFOTABLE" description="" name="callbackInfo" ordinal="2"/>
							<FieldDefinition baseType="STRING" description="" name="deviceTypeId" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="" description="This service creates a new request to the sigfox web service and returns the returning JSON.&#10;This is separated into a separate service because if we want to change the domain or other request parameters, then we don't have to modify code in multiple places." isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="createGetRequest">
						<ResultType baseType="JSON" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="service" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="" description="This service creates a new POST request to the sigfox web service and returns the returning JSON.&#10;This is separated into a separate service because if we want to change the domain or other request parameters, then we don't have to modify code in multiple places." isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="createPostRequest">
						<ResultType baseType="JSON" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="The body of the request as a json" name="requestBody" ordinal="2"/>
							<FieldDefinition baseType="STRING" description="" name="service" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="Devices" description="Disengage sequence number&#10;Maps &#10;GET https://backend.sigfox.com/api/devices/{id}/disengage" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="deleteDevice">
						<ResultType baseType="NOTHING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="deviceId" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="Delete a device type&#10;&#10;Maps the endpoint:&#10;POST https://backend.sigfox.com/api/devicetypes/delete" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="deleteDeviceType">
						<ResultType baseType="STRING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="deviceTypeId" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="Delete a device type&#10;&#10;Maps the endpoint:&#10;    POST https://backend.sigfox.com/api/devicetypes/{devicetype-id}/callbacks/{callback-id}/delete" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="deleteDeviceTypeCallback">
						<ResultType baseType="STRING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="callbackId" ordinal="2"/>
							<FieldDefinition baseType="STRING" description="" name="deviceTypeId" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="Edit a device type&#10;Maps the endpoint:&#10;POST https://backend.sigfox.com/api/devicetypes/edit" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="editDeviceType">
						<ResultType baseType="STRING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition aspect.dataShape="Sigfox.DeviceTypeDatashape" aspect.isRequired="true" baseType="INFOTABLE" description="The device type information coming as a infotable" name="deviceTypeInfo" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="Delete a device type&#10;&#10;Maps the endpoint:&#10;    POST https://backend.sigfox.com/api/devicetypes/{devicetype-id}/callbacks/{callback-id}/enable?enabled=true" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="enableDeviceTypeCallback">
						<ResultType baseType="STRING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="callbackId" ordinal="2"/>
							<FieldDefinition baseType="STRING" description="" name="deviceTypeId" ordinal="1"/>
							<FieldDefinition baseType="BOOLEAN" description="" name="enabled" ordinal="3"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="Devices" description="Gets information about a device.&#10;Maps the endpoint: &#10;GET https://backend.sigfox.com/api/devices/{device-id}" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getDeviceInfo">
						<ResultType aspect.dataShape="Sigfox.DeviceInfoDatashape" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="deviceId" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="Devices" description="Lists the devices associated to a specific device type.&#10;Maps the endpoint:&#10;api/devicetypes/{devicetype-id}/devices?snr={snr}" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getDeviceList">
						<ResultType aspect.dataShape="Sigfox.DeviceInfoDatashape" baseType="INFOTABLE" description="The list of devices." name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description=" the device type identifier " name="deviceType" ordinal="1"/>
							<FieldDefinition aspect.defaultValue="100" baseType="STRING" description="Maximum number of status events to return, default 100." name="limit" ordinal="3"/>
							<FieldDefinition baseType="STRING" description="Filter the device list according to the average signal to noise ratio of the last 25 received messages. Values can be :&#10;1, for SNR values from 0 to 10 dB&#10;2, for SNR values from 10 to 13 dB&#10;3, for SNR values from 13 to 20 dB&#10;4, for SNR values above 20 dB&#10;If the value is omitted then get all the devices." name="snr" ordinal="2"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getDeviceTypeCallbacks">
						<ResultType aspect.dataShape="Sigfox.CallbackDatashape" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="The device Type id for which to get the callbacks" name="deviceType" ordinal="1"/>
						</ParameterDefinitions>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="Lists the devices associated to a specific device type.&#10;Maps the endpoint:&#10;GET https://backend.sigfox.com/api/devicetypes" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getDeviceTypes">
						<ResultType aspect.dataShape="Sigfox.DeviceInfoDatashape" baseType="INFOTABLE" description="The list of device types." name="result" ordinal="0"/>
						<ParameterDefinitions/>
					</ServiceDefinition>
					<ServiceDefinition aspect.isAsync="false" category="DeviceTypes" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="registerNewDevice">
						<ResultType baseType="STRING" description="" name="result" ordinal="0"/>
						<ParameterDefinitions>
							<FieldDefinition baseType="STRING" description="" name="deviceTypeId" ordinal="5"/>
							<FieldDefinition baseType="STRING" description="" name="id" ordinal="2"/>
							<FieldDefinition baseType="STRING" description="" name="pac" ordinal="3"/>
							<FieldDefinition baseType="STRING" description="" name="prefix" ordinal="1"/>
							<FieldDefinition baseType="STRING" description="" name="productCertificate" ordinal="4"/>
						</ParameterDefinitions>
					</ServiceDefinition>
				</ServiceDefinitions>
				<EventDefinitions/>
				<ServiceMappings/>
				<ServiceImplementations>
					<ServiceImplementation description="" handlerName="Script" name="createDeviceType">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var contentJson = deviceTypeInfo.ToJSON().rows[0];
// this endpoint wants the contract in the field called contentId
contentJson.contractId = contentJson.contract;
delete contentJson.contract;
var params = {
	requestBody: JSON.stringify(contentJson),
	service: 'devicetypes/create'
};

var result =  me.createPostRequest(params);
]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="createDeviceTypeCallback">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var contentJson = callbackInfo.ToJSON().rows[0];

var params = {
    requestBody:   JSON.stringify([contentJson]) ,
	service: 'devicetypes/' + deviceTypeId + '/callbacks/new'
};

var result = me.createPostRequest(params);
result = params.requestBody;]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="createGetRequest">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var params = {
	url: me.url + service,
	password: me.password,
	username: me.username,
    ignoreSSLErrors: true
};
// create a new GET request and return the response JSON.
var result = Resources["ContentLoaderFunctions"].GetJSON(params);

]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="createPostRequest">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var params = {
	ignoreSSLErrors: true,
	url: me.url + service,
	content: requestBody,
	password: me.password,
	username: me.username,
    header: 'Content-Type: application/json'
};

var result = Resources["ContentLoaderFunctions"].PostText(params);]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="deleteDevice">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var params = {
	service: 'devices/' + deviceId + '/disengage'
};

var result =  me.createPostRequest(params);
]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="deleteDeviceType">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var contentJson = {
    id: deviceTypeId
};

var params = {
	requestBody: JSON.stringify(contentJson),
	service: 'devicetypes/delete'
};

var result =  me.createPostRequest(params);
]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="deleteDeviceTypeCallback">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var params = {
	service: 'devicetypes/' + deviceTypeId + '/callbacks/' + callbackId + '/delete'
};

var result =  me.createPostRequest(params);]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="editDeviceType">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var contentJson = deviceTypeInfo.ToJSON().rows[0];
// this endpoint wants the contract in the field called contentId
var params = {
	requestBody: JSON.stringify(contentJson),
	service: 'devicetypes/edit'
};

var result =  me.createPostRequest(params);
]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="enableDeviceTypeCallback">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var params = {
	service: 'devicetypes/' + deviceTypeId + '/callbacks/' + callbackId + '/enable?enabled=' + enabled
};

var result =  me.createPostRequest(params);]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="getDeviceInfo">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[// in order to allow for better logging
var loggerPrefix = me.name + "::getDeviceInfo";
// throw an error if no deviceType
if(!deviceId) {
	logger.error(loggerPrefix + "No device id specified!");
	throw "No device type specified!";
}

var service = 'devices/' + deviceId ;

// call the service that fetches the json
var jsonResult = me.createGetRequest({service: service});
// create the infotable that holds the result
var params = {
	infoTableName : "InfoTable",
	dataShapeName : "Sigfox.DeviceInfoDatashape"
};

var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

result.AddRow(jsonResult);
]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="getDeviceList">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[// in order to allow for better logging
var loggerPrefix = me.name + "::getDeviceList";
// throw an error if no deviceType
if(!deviceType) {
	logger.error(loggerPrefix + "No device type specified!");
	throw "No device type specified!";
}

var service = 'devicetypes/' + deviceType + '/devices?';
// if the snr parameter was provided then added it to url params
if(snr) {
 	service += 'snr=' + snr + '&';
}
// if the limit parameter was provided then added it to url params
if(limit) {
 	service += 'limit=' + limit;
}
// call the service that fetches the json
var jsonResult = me.createGetRequest({service: service});
// create the infotable that holds the result
var params = {
	infoTableName : "InfoTable",
	dataShapeName : "Sigfox.DeviceInfoDatashape"
};

var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

// iterate through the jsonData and add each row to the result
for each(var item in jsonResult.data) {
    result.AddRow(item);
}]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="getDeviceTypeCallbacks">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[// in order to allow for better logging
var loggerPrefix = me.name + "::getDeviceTypeCallbacks";
// throw an error if no deviceType
if(!deviceType) {
	logger.error(loggerPrefix + "No device type specified!");
	throw "No device type specified!";
}

var service = 'devicetypes/' + deviceType + '/callbacks';

// call the service that fetches the json
var jsonResult = me.createGetRequest({service: service});
// create the infotable that holds the result
var params = {
	infoTableName : "InfoTable",
	dataShapeName : "Sigfox.CallbackDatashape"
};

var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

// iterate through the jsonData and add each row to the result
for each(var item in jsonResult.data) {
    item.url=item.urlPattern;
    result.AddRow(item);
}]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="getDeviceTypes">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[// in order to allow for better logging
var loggerPrefix = me.name + "::getDeviceTypes";

var service = 'devicetypes';
// call the service that fetches the json
var jsonResult = me.createGetRequest({service: service});
// create the infotable that holds the result
var params = {
	infoTableName : "InfoTable",
	dataShapeName : "Sigfox.DeviceTypeDatashape"
};

var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

// iterate through the jsonData and add each row to the result
for each(var item in jsonResult.data) {
    result.AddRow(item);
}]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
					<ServiceImplementation description="" handlerName="Script" name="registerNewDevice">
						<ConfigurationTables>
							<ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[var contentJson = {
    prefix: prefix,
    ids: [{id: id, pac: pac}],
    productCertificate: productCertificate

}
// this endpoint wants the contract in the field called contentId
var params = {
	requestBody: JSON.stringify(contentJson),
	service: '/devicetypes/' + deviceTypeId + '/devices/bulk/create/async'
};

var result =  me.createPostRequest(params);
]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
				</ServiceImplementations>
				<Subscriptions/>
			</ThingShape>
			<ImplementedShapes/>
			<SharedConfigurationTables/>
			<InstanceDesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</InstanceDesignTimePermissions>
			<InstanceRunTimePermissions/>
			<InstanceVisibilityPermissions>
				<Visibility>
					<Principal isPermitted="true" name="Portugal Telecom" type="Organization"/>
				</Visibility>
			</InstanceVisibilityPermissions>
			<ConfigurationChanges>
				<ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, tags : updated&#10;" timestamp="2016-01-18T12:38:15.921+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="header : tags : updated&#10;" timestamp="2016-01-18T13:58:41.787+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="services : createDeviceType : Input parameter deviceTypeInfo Updated, Inputs updated, createDeviceTypeCallback : Input parameter callbackInfo Updated, Inputs updated, editDeviceType : Input parameter deviceTypeInfo Updated, Inputs updated, getDeviceInfo : Output Updated, getDeviceList : Output Updated, getDeviceTypeCallbacks : Output Updated, getDeviceTypes : Output Updated&#10;" timestamp="2016-01-18T14:02:11.996+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="services : getDeviceTypes : Code Updated, getDeviceTypeCallbacks : Code Updated, getDeviceList : Code Updated, getDeviceInfo : Code Updated&#10;" timestamp="2016-01-18T14:02:44.595+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2016-01-28T11:10:06.529+02:00" user="Administrator"/>
			</ConfigurationChanges>
		</ThingTemplate>
	</ThingTemplates>
	<ExtensionPackages/>
	<Organizations/>
	<Menus/>
	<Resources/>
	<DataTags/>
	<ThingShapes>
		<ThingShape className="" description="A generic sigfox Device" documentationContent="&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#10;" homeMashup="" lastModifiedDate="2016-01-28T11:10:06.523+02:00" name="Sigfox.GenericDeviceThingShape" tags="PTC:Sigfox">
			<PropertyDefinitions>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="DATETIME" category="" description="" isLocalOnly="false" name="activationDate" ordinal="11"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="ON" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="NUMBER" category="" description="Average Rssi&#9;" isLocalOnly="false" name="averageRssi" ordinal="6"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="ON" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="NUMBER" category="" description="Average Signal" isLocalOnly="false" name="averageSignal" ordinal="7"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="BOOLEAN" category="" description="" isLocalOnly="false" name="isConnected" ordinal="4"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="DATETIME" category="" description="Last Communication Date" isLocalOnly="false" name="lastCommunicationDate" ordinal="1"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="lastRawMessage" ordinal="5"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeThreshold="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="NUMBER" category="" description="Sigfox Sequence Number" isLocalOnly="false" name="lastSeqNumber" ordinal="12"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="ON" aspect.isLogged="true" aspect.isPersistent="false" aspect.isReadOnly="false" baseType="STRING" category="" description="Sigfox Station" isLocalOnly="false" name="lastStation" ordinal="13"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeThreshold="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="0.0" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="NUMBER" category="" description="Number of Downlink Messages&#9;" isLocalOnly="false" name="numberDownlinkMessages" ordinal="2"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="ON" aspect.defaultValue="0.0" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="NUMBER" category="" description="Number of Uplink Messages&#9;" isLocalOnly="false" name="numberUplinkMessages" ordinal="3"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="BOOLEAN" category="" description="This property will enable to check if messages out of order were receved from sigfox" isLocalOnly="false" name="sequenceOutOfOrder" ordinal="16"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="true" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="BOOLEAN" category="" description="This property will enable to manage connectivity issues in Alert Management." isLocalOnly="false" name="sigfoxConnectivityError" ordinal="15"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="sigfoxId" ordinal="8"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="LOCATION" category="" description="" isLocalOnly="false" name="sigfoxLocation" ordinal="14"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="sigfoxName" ordinal="9"/>
				<PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="sigfoxState" ordinal="10"/>
			</PropertyDefinitions>
			<ServiceDefinitions/>
			<EventDefinitions/>
			<ServiceMappings/>
			<ServiceImplementations/>
			<Subscriptions>
				<Subscription enabled="true" eventName="DataChange" source="" sourceProperty="lastSeqNumber">
					<ServiceImplementation description="" handlerName="Script" name="lastSeqNumber.DataChange">
						<ConfigurationTables>
							<ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[if(eventData.newValue.value != eventData.oldValue.value + 1) {
  logger.warn("Out of order messages for thing " + me.name + ". We got sequence " + eventData.oldValue.value + " then " + eventData.newValue.value);
    
 me.sequenceOutOfOrder = true;
    
} else {
    
 // New Reading   
me.sequenceOutOfOrder = false;   
    
}]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
				</Subscription>
				<Subscription enabled="true" eventName="ScheduledEvent" source="Sigfox.DevicesConnectedScheduler" sourceProperty="">
					<ServiceImplementation description="" handlerName="Script" name="Sigfox.DevicesConnectedScheduler:ScheduledEvent">
						<ConfigurationTables>
							<ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
								<DataShape>
									<FieldDefinitions>
										<FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
									</FieldDefinitions>
								</DataShape>
								<Rows>
									<Row>
										<code>
											<![CDATA[ me.sigfoxConnectivityError  = dateDifference(eventData.timestamp, me.lastCommunicationDate) > 1000*60*60; 
 me.isConnected  = dateDifference(eventData.timestamp, me.lastCommunicationDate) < 1000*60*60; ]]>
										</code>
									</Row>
								</Rows>
							</ConfigurationTable>
						</ConfigurationTables>
					</ServiceImplementation>
				</Subscription>
			</Subscriptions>
			<Owner name="Administrator" type="User"/>
			<avatar/>
			<DesignTimePermissions>
				<Create/>
				<Read/>
				<Update/>
				<Delete/>
				<Metadata/>
			</DesignTimePermissions>
			<RunTimePermissions/>
			<VisibilityPermissions>
				<Visibility/>
			</VisibilityPermissions>
			<ConfigurationTables/>
			<ConfigurationChanges>
				<ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, tags : updated&#10;" timestamp="2016-01-18T12:37:08.717+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="header : tags : updated&#10;" timestamp="2016-01-18T13:58:33.430+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="MODIFY" changeReason="subscriptions : PT.SigfoxDevicesConnectedScheduler:ScheduledEvent : removed, New subscription : Code Updated, Source updated, Sigfox.DevicesConnectedScheduler:ScheduledEvent : New subscription, Subscription Added&#10;" timestamp="2016-01-18T15:02:51.180+02:00" user="Administrator"/>
				<ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2016-01-28T11:10:06.523+02:00" user="Administrator"/>
			</ConfigurationChanges>
			<PropertyBindings/>
			<RemotePropertyBindings/>
			<RemoteServiceBindings/>
			<RemoteEventBindings/>
			<AlertConfigurations>
				<AlertDefinitions name="activationDate"/>
				<AlertDefinitions name="averageRssi"/>
				<AlertDefinitions name="averageSignal"/>
				<AlertDefinitions name="isConnected"/>
				<AlertDefinitions name="lastCommunicationDate"/>
				<AlertDefinitions name="lastRawMessage"/>
				<AlertDefinitions name="lastSeqNumber"/>
				<AlertDefinitions name="lastStation"/>
				<AlertDefinitions name="numberDownlinkMessages"/>
				<AlertDefinitions name="numberUplinkMessages"/>
				<AlertDefinitions name="sequenceOutOfOrder">
					<AlertDefinition alertType="EqualTo" description="Lost message issue" enabled="true" name="sequenceOutOfOrder" priority="1">
						<AlertAttributes>
							<DataShape>
								<FieldDefinitions>
									<FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Value" baseType="BOOLEAN" description="value" name="value" ordinal="0"/>
								</FieldDefinitions>
							</DataShape>
							<Rows>
								<Row>
									<value>true</value>
								</Row>
							</Rows>
						</AlertAttributes>
					</AlertDefinition>
				</AlertDefinitions>
				<AlertDefinitions name="sigfoxConnectivityError">
					<AlertDefinition alertType="EqualTo" description="Sigfox connectivity issue" enabled="true" name="SigfoxConnectivityError" priority="1">
						<AlertAttributes>
							<DataShape>
								<FieldDefinitions>
									<FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Value" baseType="BOOLEAN" description="value" name="value" ordinal="0"/>
								</FieldDefinitions>
							</DataShape>
							<Rows>
								<Row>
									<value>true</value>
								</Row>
							</Rows>
						</AlertAttributes>
					</AlertDefinition>
				</AlertDefinitions>
				<AlertDefinitions name="sigfoxId"/>
				<AlertDefinitions name="sigfoxLocation"/>
				<AlertDefinitions name="sigfoxName"/>
				<AlertDefinitions name="sigfoxState"/>
			</AlertConfigurations>
			<InstanceRunTimePermissions/>
		</ThingShape>
	</ThingShapes>
	<Subsystems/>
</Entities>